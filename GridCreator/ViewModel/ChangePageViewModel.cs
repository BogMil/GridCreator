using GridCreator.Commands;
using GridCreator.View.Pages;
using System.Windows;
using System.Windows.Input;

namespace GridCreator.ViewModel
{
    class ChangePageViewModel
    {
        public ICommand GoToNextPageCommand { get; set; }
        public ICommand GoToPreviousPageCommand { get; set; }
        public ICommand InsertAutoGeneratedCodeCommand { get; set; }
        public ICommand SetAddColumnOptionCommand { get; set; }
        
        private Window BaseWindow { get; }

        public ChangePageViewModel()
        {
            GoToNextPageCommand = new CustomCommand(GoToNextPage, CanGoToNextPage);
            InsertAutoGeneratedCodeCommand = new CustomCommand(InsertAutoGeneratedCode, CanInsertAutoGeneratedCode);
            GoToPreviousPageCommand = new CustomCommand(GoToPreviousPage, CanGoToPreviousPage);
            SetAddColumnOptionCommand = new CustomCommand(SetAddColumnOption, CanSetAddColumnOption);
        }

        public bool CanGoToNextPage(object parameter)
        {
            return true;
        }

        public void GoToNextPage(object parameter)
        {
            var baseWindowInstance = ShowWizardForGridCreation.BaseWindowInstance;
            var currentPage = baseWindowInstance.testFrame.Content.GetType().Name;

            MessageBox.Show(currentPage);
            if (currentPage == PageNames.ChoseDataSourcePage)
                baseWindowInstance.testFrame.NavigationService.Navigate(new Page1());
        }
        //
        public bool CanGoToPreviousPage(object parameter)
        {
            return true;
        }

        public void GoToPreviousPage(object parameter)
        {
            var baseWindowInstance = ShowWizardForGridCreation.BaseWindowInstance;
            var currentPage = baseWindowInstance.testFrame.Content.GetType().Name;

            MessageBox.Show(currentPage);
            if (currentPage == PageNames.Page1)
                baseWindowInstance.testFrame.NavigationService.Navigate(new ChoseDataSourcePage());
        }
        //

        public bool CanInsertAutoGeneratedCode(object parameter)
        {
            return true;
        }

        public void InsertAutoGeneratedCode(object parameter)
        {
            var ShowWizardForGridCreationInstance = ShowWizardForGridCreation.Instance;
            ShowWizardForGridCreationInstance.test();
        }
        //
        public bool CanSetAddColumnOption(object parameter)
        {
            return true;
        }

        public void SetAddColumnOption(object parameter)
        {
            MessageBox.Show(parameter.ToString());
        }
    }
}
